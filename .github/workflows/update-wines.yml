name: Update Wine Data

on:
  schedule:
    - cron: '0 2 * * 0'  # Every Sunday at 2am UTC
  workflow_dispatch:      # Allow manual trigger from GitHub UI

jobs:
  scrape-and-update:
    runs-on: ubuntu-22.04  # Use 22.04 instead of latest to avoid libasound2 issue
    timeout-minutes: 90
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install FFmpeg and Chromium dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            ffmpeg \
            libnss3 \
            libnspr4 \
            libatk1.0-0 \
            libatk-bridge2.0-0 \
            libcups2 \
            libdrm2 \
            libxkbcommon0 \
            libxcomposite1 \
            libxdamage1 \
            libxfixes3 \
            libxrandr2 \
            libgbm1 \
            libasound2 \
            libatspi2.0-0
      
      - name: Install Python dependencies
        run: |
          cd backend
          pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Install Playwright browsers
        run: |
          cd backend
          python -m playwright install chromium
          # Skip install-deps as we already have system dependencies from FFmpeg step
      
      - name: Set up MongoDB (temporary)
        run: |
          docker run -d -p 27017:27017 \
            -e MONGO_INITDB_ROOT_USERNAME=admin \
            -e MONGO_INITDB_ROOT_PASSWORD=temp-gh-actions \
            --name mongodb mongo:7
          echo "Waiting for MongoDB to be ready..."
          sleep 15
      
      - name: Verify MongoDB is running
        run: |
          docker ps
          docker logs mongodb
      
      - name: Scrape and process wines
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          CLOUDINARY_URL: ${{ secrets.CLOUDINARY_URL }}
          MONGODB_URI: mongodb://admin:temp-gh-actions@localhost:27017/vinly?authSource=admin
        run: |
          cd backend
          echo "Seeding influencers..."
          python scripts/seed_tiktok_influencers.py
          
          echo "Scraping TikTok profile..."
          python scripts/smart_scraper.py pepijn.wijn
          
          echo "Transcribing videos..."
          python scripts/transcribe_videos.py
          
          echo "Extracting wines..."
          python scripts/extract_wines.py
          
          echo "Extracting and uploading images..."
          python scripts/enrich_wine_images.py
      
      - name: Export to JSON
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          CLOUDINARY_URL: ${{ secrets.CLOUDINARY_URL }}
          MONGODB_URI: mongodb://admin:temp-gh-actions@localhost:27017/vinly?authSource=admin
        run: |
          cd backend
          python scripts/export_to_json.py
      
      - name: Check if wines.json was created
        run: |
          if [ -f docs/wines.json ]; then
            echo "‚úÖ wines.json created successfully"
            echo "File size: $(du -h docs/wines.json)"
            echo "Wine count: $(cat docs/wines.json | grep -o '"id"' | wc -l)"
          else
            echo "‚ùå wines.json was not created"
            exit 1
          fi
      
      - name: Commit and push changes
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add docs/wines.json
          
          # Only commit if there are changes
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "üç∑ Automated wine update - $(date +'%Y-%m-%d %H:%M UTC')"
            git push
            echo "‚úÖ Changes pushed successfully"
          fi
      
      - name: Cleanup MongoDB
        if: always()
        run: |
          docker stop mongodb || true
          docker rm mongodb || true
      
      - name: Summary
        if: always()
        run: |
          echo "==================================="
          echo "Workflow Summary"
          echo "==================================="
          echo "Date: $(date)"
          if [ -f docs/wines.json ]; then
            echo "Wines exported: $(cat docs/wines.json | grep -o '"id"' | wc -l)"
          fi
          echo "==================================="

